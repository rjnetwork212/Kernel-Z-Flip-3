name: Kernel Build (Z Flip 3 + KernelSU)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ARCH: arm64
      SUBARCH: arm64
      KERNELSU: true

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Android Toolchain
      run: |
        mkdir -p ~/toolchains
        curl -O https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-r450784d.tar.gz
        tar -C ~/toolchains -xzf clang-r450784d.tar.gz
        echo "TOOLCHAIN=$(pwd)/toolchains/clang-r450784d" >> $GITHUB_ENV

    - name: Setup KernelSU-Next
      run: |
        # Clone KernelSU-Next
        git clone https://github.com/rifsxd/KernelSU-Next.git
        cd KernelSU-Next
        git checkout next-susfs
        
        # Create symlink manually
        cd ..
        ln -sf $(pwd)/KernelSU-Next/kernel drivers/kernelsu
        
        # Add to Makefile
        echo "obj-\$(CONFIG_KSU) += kernelsu/" >> drivers/Makefile
        
        # Add to Kconfig
        sed -i '/endmenu/i\source "drivers/kernelsu/Kconfig"' drivers/Kconfig

    - name: Configure Kernel
      run: |
        export PATH=$TOOLCHAIN/bin:$PATH
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CC=clang
        make vendor/b2q_eur_openx_defconfig
        # Enable KernelSU and SUSFS
        echo "CONFIG_KSU=y" >> .config
        echo "CONFIG_KSU_SUSFS=y" >> .config
        echo "CONFIG_KPROBES=y" >> .config
        echo "CONFIG_HAVE_KPROBES=y" >> .config
        echo "CONFIG_KPROBE_EVENTS=y" >> .config

    - name: Build Kernel
      run: |
        export PATH=$TOOLCHAIN/bin:$PATH
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CC=clang
        make -j$(nproc)

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-files
        path: |
          arch/arm64/boot/Image.gz
          arch/arm64/boot/Image.gz-dtb
          arch/arm64/boot/dtbo.img
